default:
  image:
    repository: ghcr.io/elastic/opentelemetry-demo
    tag: 1.11.4
  envOverrides:
    - name: OTEL_SERVICE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.labels['app.kubernetes.io/component']
    - name: OTEL_K8S_NAMESPACE
      valueFrom:
        fieldRef:
         apiVersion: v1
         fieldPath: metadata.namespace
    - name: OTEL_K8S_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: OTEL_K8S_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OTEL_K8S_POD_UID
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.uid
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: 'service.name=$(OTEL_SERVICE_NAME),service.instance.id=$(OTEL_K8S_POD_UID),service.namespace=opentelemetry-demo,k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME)'


opentelemetry-collector:
  image:
    # repository: docker.elastic.co/beats/elastic-agent
    # tag: 8.16.0-SNAPSHOT
    repository: rcolles/otelcol-testathon
    tag: 0.0.5
  mode: "deployment"
  presets:
    kubernetesAttributes:
      enabled: true
    kubernetesEvents:
      enabled: true
    clusterMetrics:
      enabled: true
  livenessProbe:
    httpGet:
      port: 8888
      path: metrics
  readinessProbe:
    httpGet:
      port: 8888
      path: metrics

  extraEnvs:
    - name: ELASTIC_AGENT_OTEL
      value: "true"

  alternateConfig:
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
    connectors:
      count:
        spans:
          service_summary:
            attributes:
              - key: metricset.name
                default_value: service_summary
        datapoints:
          service_summary:
            attributes:
              - key: metricset.name
                default_value: service_summary
        logs:
          service_summary:
            attributes:
              - key: metricset.name
                default_value: service_summary
        spanevents:
          service_summary:
            attributes:
              - key: metricset.name
                default_value: service_summary
      spanmetricsv2:
        spans:
          - name: transaction.duration.histogram
            description: APM service transaction aggregated metrics as histogram
            ephemeral_resource_attribute: true
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: transaction.root
              - key: transaction.type
              - key: metricset.name
                default_value: service_transaction
              - key: elasticsearch.mapping.hints
                default_value: [_doc_count]
            histogram:
              exponential: {}
            unit: us
          - name: transaction.duration.summary
            description: APM service transaction aggregated metrics as summary
            ephemeral_resource_attribute: true
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: transaction.root
              - key: transaction.type
              - key: metricset.name
                default_value: service_transaction
              - key: elasticsearch.mapping.hints
                default_value: [aggregate_metric_double]
            histogram:
              explicit:
                buckets: [1]
            unit: us
          - name: transaction.duration.histogram
            description: APM transaction aggregated metrics as histogram
            ephemeral_resource_attribute: true
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
              - key: container.id
              - key: k8s.pod.name
              - key: service.version
              - key: service.instance.id # service.node.name
              - key: process.runtime.name # service.runtime.name
              - key: process.runtime.version # service.runtime.version
              - key: telemetry.sdk.version # service.language.version??
              - key: host.name
              - key: os.type # host.os.platform
              - key: faas.instance
              - key: faas.name
              - key: faas.version
              - key: cloud.provider
              - key: cloud.region
              - key: cloud.availability_zone
              - key: cloud.platform # cloud.servicename
              - key: cloud.account.id
            attributes:
              - key: transaction.root
              - key: transaction.name
              - key: transaction.type
              - key: transaction.result
              - key: event.outcome
              - key: metricset.name
                default_value: transaction
              - key: elasticsearch.mapping.hints
                default_value: [_doc_count]
            histogram:
              exponential: {}
            unit: us
          - name: transaction.duration.summary
            description: APM transaction aggregated metrics as summary
            ephemeral_resource_attribute: true
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
              - key: container.id
              - key: k8s.pod.name
              - key: service.version
              - key: service.instance.id # service.node.name
              - key: process.runtime.name # service.runtime.name
              - key: process.runtime.version # service.runtime.version
              - key: telemetry.sdk.version # service.language.version??
              - key: host.name
              - key: os.type # host.os.platform
              - key: faas.instance
              - key: faas.name
              - key: faas.version
              - key: cloud.provider
              - key: cloud.region
              - key: cloud.availability_zone
              - key: cloud.platform # cloud.servicename
              - key: cloud.account.id
            attributes:
              - key: transaction.root
              - key: transaction.name
              - key: transaction.type
              - key: transaction.result
              - key: event.outcome
              - key: metricset.name
                default_value: transaction
              - key: elasticsearch.mapping.hints
                default_value: [aggregate_metric_double]
            histogram:
              explicit:
                buckets: [1]
            unit: us
          - name: span.destination.service.response_time
            description: APM span destination metrics
            ephemeral_resource_attribute: true
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: span.name
              - key: event.outcome
              - key: service.target.type
              - key: service.target.name
              - key: metricset.name
                default_value: service_destination
            counters:
              sum_suffix: ".sum.us"
              count_suffix: ".count"
            unit: us
    exporters:
      debug: {}
      otlp/elastic:
        endpoint: "http://48.217.113.189:4317"
        tls:
          insecure: true
    processors:
      elastictrace:
      lsminterval:
        intervals:
          - duration: 1m
            statements:
              - set(resource.attributes["metricset.interval"], "1m")
              - set(attributes["data_stream.dataset"], Concat([attributes["metricset.name"], "1m"], "."))
              - set(attributes["processor.event"], "metric")
          - duration: 10m
            statements:
              - set(resource.attributes["metricset.interval"], "10m")
              - set(attributes["data_stream.dataset"], Concat([attributes["metricset.name"], "10m"], "."))
              - set(attributes["processor.event"], "metric")
          - duration: 60m
            statements:
              - set(resource.attributes["metricset.interval"], "60m")
              - set(attributes["data_stream.dataset"], Concat([attributes["metricset.name"], "60m"], "."))
              - set(attributes["processor.event"], "metric")
      batch: {}
      resource:
        attributes:
          - key: deployment.environment
            value: "opentelemetry-demo"
            action: upsert
    receivers:
      httpcheck/frontendproxy:
        targets:
        - endpoint: http://example-frontendproxy:8080
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            cors:
              allowed_origins:
              - http://*
              - https://*
            endpoint: ${env:MY_POD_IP}:4318
    service:
      extensions:
        - health_check
      pipelines:
        logs:
          exporters:
          - debug
          - otlp/elastic
          processors:
          - batch
          - resource
          receivers:
          - otlp
        metrics:
          exporters:
          - otlp/elastic
          - debug
          processors:
          - batch
          - resource
          receivers:
          - httpcheck/frontendproxy
          - otlp
        traces:
          exporters:
          - otlp/elastic
          - debug
          - spanmetricsv2
          - count
          processors:
          - elastictrace
          - batch
          - resource
          receivers:
          - otlp
        metrics/aggregated-metrics:
          receivers:
            - spanmetricsv2
            - count
          processors:
            - lsminterval
          exporters:
           - otlp/elastic
      telemetry:
        logs:
          level: debug
        metrics:
          address: ${env:MY_POD_IP}:8888


opensearch:
  enabled: false

grafana:
  enabled: false

jaeger:
  enabled: false

prometheus:
  enabled: false
