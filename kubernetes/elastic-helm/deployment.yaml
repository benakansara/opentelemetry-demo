default:
  image:
    repository: ghcr.io/elastic/opentelemetry-demo
    tag: 1.11.4
  envOverrides:
    - name: OTEL_SERVICE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.labels['app.kubernetes.io/component']
    - name: OTEL_K8S_NAMESPACE
      valueFrom:
        fieldRef:
         apiVersion: v1
         fieldPath: metadata.namespace
    - name: OTEL_K8S_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: OTEL_K8S_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OTEL_K8S_POD_UID
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.uid
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: 'service.name=$(OTEL_SERVICE_NAME),service.instance.id=$(OTEL_K8S_POD_UID),service.namespace=opentelemetry-demo,k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME)'

components:
  flagd:
    mountedConfigMaps:
      - name: config
        mountPath: /etc/flagd/
        existingConfigMap: demo-flagd-enabled-config


opentelemetry-collector:
  image:
    repository: docker.elastic.co/beats/elastic-agent
    tag: 8.16.0-SNAPSHOT
  mode: "deployment"
  presets:
    kubernetesAttributes:
      enabled: true
    kubernetesEvents:
      enabled: true
    clusterMetrics:
      enabled: true

  extraEnvs:
    - name: ELASTIC_AGENT_OTEL
      value: "true"

  alternateConfig:
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
    exporters:
      debug: {}
      otlp/apm:
        endpoint: "http://57.154.248.70:8200"
        tls:
          insecure: true
      otlp/esexporter:
        endpoint: "http://48.217.113.189:4321"
        tls:
          insecure: true
    processors:
      batch: {}
      transform:
        error_mode: ignore
        trace_statements:
          - context: span
            conditions:
              - IsMatch(name, "^[A-Z]+\\s+.+")
            statements:
              - merge_maps(attributes, ExtractPatterns(name, "^(?P<method>\\S+)"), "upsert")
              - set(name, attributes["method"])
      resource:
        attributes:
          - key: deployment.environment
            value: "opentelemetry-demo"
            action: upsert
    receivers:
      httpcheck/frontendproxy:
        targets:
        - endpoint: http://example-frontendproxy:8080
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            cors:
              allowed_origins:
              - http://*
              - https://*
            endpoint: ${env:MY_POD_IP}:4318
    service:
      extensions:
        - health_check
      pipelines:
        logs:
          exporters:
          - debug
          - otlp/apm
          - otlp/esexporter
          processors:
          - batch
          - resource
          receivers:
          - otlp
        metrics:
          exporters:
          - otlp/apm
          - otlp/esexporter
          - debug
          processors:
          - batch
          - resource
          receivers:
          - httpcheck/frontendproxy
          - otlp
        traces:
          exporters:
          - otlp/apm
          - otlp/esexporter
          - debug
          processors:
          - transform
          - batch
          - resource
          receivers:
          - otlp
      telemetry:
        metrics:
          address: ${env:MY_POD_IP}:8888


opensearch:
  enabled: false

grafana:
  enabled: false

jaeger:
  enabled: false

prometheus:
  enabled: false
